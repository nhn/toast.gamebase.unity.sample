using System.Collections.Generic;

namespace GamePlatform.Logger.Internal
{
    public static class LogFields
    {
        public const string PROJECT_KEY = "projectName";
        public const string PROJECT_VERSION = "projectVersion";

        ////////////////////////////////////////////////////////////
        // Log info.
        ////////////////////////////////////////////////////////////
        public const string LOG_VERSION = "logVersion";
        public const string LOG_TYPE = "logType";
        public const string LOG_SOURCE = "logSource";
        public const string LOG_LEVEL = "logLevel";
        public const string LOG_MESSAGE = "body";
        public const string LOG_SEND_TIME = "sendTime";
        public const string LOG_CREATE_TIME = "createTime";
        public const string LOG_BULK_INDEX = "lncBulkIndex";
        public const string LOG_TRANSACTION_ID = "transactionID";

        ////////////////////////////////////////////////////////////
        // Device info.
        ////////////////////////////////////////////////////////////
        public const string DEVICE_MODEL = "DeviceModel";
        public const string CARRIER_NAME = "Carrier";
        public const string COUNTRY_CODE = "CountryCode";
        public const string PLATFORM_NAME = "Platform";

        ////////////////////////////////////////////////////////////
        // Network info.
        ////////////////////////////////////////////////////////////
        public const string NETWORK_TYPE = "NetworkType";

        ////////////////////////////////////////////////////////////
        // Identify info.
        ////////////////////////////////////////////////////////////
        public const string DEVICE_ID = "DeviceID";
        public const string SESSION_ID = "SessionID";
        public const string LAUNCHED_ID = "launchedID";
        public const string USER_ID = "UserID";

        ////////////////////////////////////////////////////////////
        // Version info.
        ////////////////////////////////////////////////////////////
        public const string SDK_VERSION = "SdkVersion";

        ////////////////////////////////////////////////////////////
        // Crash Info.
        ////////////////////////////////////////////////////////////
        public const string CRASH_STYLE = "CrashStyle";
        public const string CRASH_SYMBOL = "SymMethod";
        public const string CRASH_DUMP_DATA = "dmpData";

        ////////////////////////////////////////////////////////////
        // iOS Crash Info. Add for filter consistency.
        ////////////////////////////////////////////////////////////
        public const string FREE_MEMORY = "FreeMemory";
        public const string FREE_DISKSPACE = "FreeDiskSpace";

        ////////////////////////////////////////////////////////////
        // These fields generated by symbolication in server.
        ////////////////////////////////////////////////////////////
        public const string SINK_VERSION = "SinkVersion";
        public const string ERROR_CODE = "errorCode";
        public const string CARSH_META = "crashMeta";
        public const string SYMBOLICATION_RESULT = "SymResult";
        public const string EXCEPTION_TYPE = "ExceptionType";
        public const string LOCATION = "Location";
        public const string ISSUE_ID = "lncIssueID";

        private static readonly HashSet<string> ReservedFields = new HashSet<string>
        {
            PROJECT_KEY.ToLower(),
            PROJECT_VERSION.ToLower(),
            LOG_VERSION.ToLower(),
            LOG_TYPE.ToLower(),
            LOG_SOURCE.ToLower(),
            LOG_LEVEL.ToLower(),
            LOG_MESSAGE.ToLower(),
            LOG_SEND_TIME.ToLower(),
            LOG_CREATE_TIME.ToLower(),
            LOG_BULK_INDEX.ToLower(),
            LOG_TRANSACTION_ID.ToLower(),
            DEVICE_MODEL.ToLower(),
            CARRIER_NAME.ToLower(),
            COUNTRY_CODE.ToLower(),
            PLATFORM_NAME.ToLower(),
            NETWORK_TYPE.ToLower(),
            DEVICE_ID.ToLower(),
            SESSION_ID.ToLower(),
            LAUNCHED_ID.ToLower(),
            USER_ID.ToLower(),
            SDK_VERSION.ToLower(),
            CRASH_STYLE.ToLower(),
            CRASH_SYMBOL.ToLower(),
            CRASH_DUMP_DATA.ToLower(),
            FREE_MEMORY.ToLower(),
            FREE_DISKSPACE.ToLower(),
            SINK_VERSION.ToLower(),
            ERROR_CODE.ToLower(),
            CARSH_META.ToLower(),
            SYMBOLICATION_RESULT.ToLower(),
            EXCEPTION_TYPE.ToLower(),
            LOCATION.ToLower(),
            ISSUE_ID.ToLower()
        };

        private static bool IsReservedField(string name)
        {
            return ReservedFields.Contains(name.ToLower());
        }

        public static string ConvertField(string field)
        {
            string convertedField = field.Replace(' ', '_');

            if (IsReservedField(convertedField) == false)
            {
                return convertedField;
            }

            return "reserved_" + convertedField;
        }
    }
}